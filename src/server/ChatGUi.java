package server;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.ScrollPaneConstants;

/**
 *
 * @author taioli Francesco rappresenta la classe per inviare , ricevere i
 * messaggi
 */
public class ChatGUi extends javax.swing.JFrame {

    /**
     * Creates new form IndixisGui
     */
    public ChatGUi(String username, String password) {
        this.username = username;
        this.password = password;
        initComponents();
        registrazione(username, password);
        inizialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JPanel();
        user = new javax.swing.JLabel();
        notifyImage = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        menu = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        friend = new javax.swing.JPanel();
        provaMessaggio = new javax.swing.JButton();
        tab = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageText = new javax.swing.JTextPane();
        sendButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(100, 181, 246));

        title.setBackground(new java.awt.Color(100, 181, 246));

        user.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N

        notifyImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/indixis/img/notify.png"))); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout titleLayout = new javax.swing.GroupLayout(title);
        title.setLayout(titleLayout);
        titleLayout.setHorizontalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notifyImage)
                .addContainerGap())
        );
        titleLayout.setVerticalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(titleLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(notifyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu.setBackground(new java.awt.Color(100, 181, 246));

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        friend.setBackground(new java.awt.Color(255, 102, 51));

        provaMessaggio.setText("jButton1");
        provaMessaggio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provaMessaggioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout friendLayout = new javax.swing.GroupLayout(friend);
        friend.setLayout(friendLayout);
        friendLayout.setHorizontalGroup(
            friendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(friendLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(provaMessaggio)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        friendLayout.setVerticalGroup(
            friendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, friendLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(provaMessaggio)
                .addGap(179, 179, 179))
        );

        tab.setBackground(new java.awt.Color(255, 255, 255));
        tab.setForeground(new java.awt.Color(0, 153, 102));
        tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tab.setAutoscrolls(true);
        tab.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tab.setInheritsPopupMenu(true);

        jScrollPane2.setViewportView(messageText);

        sendButton.setText("Invia");
        sendButton.setMaximumSize(new java.awt.Dimension(205, 137));
        sendButton.setMinimumSize(new java.awt.Dimension(205, 137));
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(friend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(friend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 428, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed

        String text = messageText.getText();
        //JLabel label = new JLabel(text);
        messageText.setText("");

        //-----------------
        JPanel boxMessage = new JPanel();

        //aggiugnere i bordi rotondi
        //boxMessage.setMaximumSize(new Dimension(400, 30));
        boxMessage.setAlignmentX(Component.RIGHT_ALIGNMENT);//0.0
        JLabel textofMessage = new JLabel(text);

        boxMessage.add(textofMessage);
        // panelMessage.setLayout(new BoxLayout(panelMessage, BoxLayout.Y_AXIS));
        panelMessage.add(boxMessage);

        //-----
        //panelMessage.add(label);
        panelMessage.revalidate();
        panelMessage.repaint();

        //aggiungo il messaggio all'array
        String localUser = user.getText();
        String destinatario = tab.getTitleAt(0);

        Calendar now = Calendar.getInstance();
        int day = now.get(Calendar.DAY_OF_MONTH);
        int hour = now.get(Calendar.HOUR_OF_DAY);

        Message message = new Message(localUser, text, destinatario, hour, day, TypeMessage.MESSAGGIO,false);
        listaMessaggi.add(message);
    }//GEN-LAST:event_sendButtonActionPerformed

    private void provaMessaggioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provaMessaggioActionPerformed
        Calendar now = Calendar.getInstance();
        int day = now.get(Calendar.DAY_OF_MONTH);
        int hour = now.get(Calendar.HOUR_OF_DAY);
        TypeMessage type = TypeMessage.valueOf("MESSAGGIO");
        String userLocal = user.getText();
        Message prova1 = new Message(userLocal, "sono nella chat adriana", "adriana", hour, day, TypeMessage.MESSAGGIO,true);
        Message prova2 = new Message(userLocal, "sono nella chat mattia", "mattia", hour, day, TypeMessage.MESSAGGIO,true);
        listaMessaggi.add(prova1);
        listaMessaggi.add(prova2);
    }//GEN-LAST:event_provaMessaggioActionPerformed

    /**
     * setta il nome dell'utente nella barra titolo
     *
     * @param userName
     */
    public void setUser(String userName) {
        user.setText("Bentornato, " + userName);
    }

    /**
     * aggiunge un messaggio al array
     *
     * @param messaggio
     */
    public void addMessage(Message messaggio) {
        listaMessaggi.add(messaggio);
    }

    /**
     * modifica il label di notifica di un utente
     *
     * @param user
     */
    public void addNotify(String user) {
        JLabel k = new JLabel();
        int i = Integer.valueOf((String) notifiche.get(user));
        k = (JLabel) (counterNotifiche.get(i));
        String numberOfCurrentNotify = k.getText();
        String text = String.valueOf(Integer.parseInt(numberOfCurrentNotify) + 1);
        k.setText(text);
    }

    private boolean registrazione(String username, String password) {
        MessageDigest md;

        try {
            md = MessageDigest.getInstance("MD5");
            byte[] passBytes = password.getBytes();
            md.reset();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < passBytes.length; i++) {
                sb.append(Integer.toHexString(0xff & passBytes[i]));
            }
            password = sb.toString();
        } catch (NoSuchAlgorithmException ex) {
            System.out.println("Errore creazione hash password");
        }

        Connection prova = new Connection(5555, "127.0.0.1", username, password, "login", this);

        return true;
    }

    public void setFriendsListArray(ArrayList listaAmici) {
        ar = listaAmici;
        amici();

        friend.setLayout(new BoxLayout(friend, BoxLayout.Y_AXIS));
        friend.setVisible(true);
        friend.revalidate();
    }

    public void amici() {
        int x = 0;
        for (int i = 0; i < ar.size(); i++) {
            String text = (String) ar.get(i).toString();

            //notifiche
            notifiche.put(text, String.valueOf(i));
            JLabel notify = new JLabel("0");
//            notify.set
            counterNotifiche.add(notify);

            JButton button = new JButton((String) ar.get(i).toString());

            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    notify.setText("0");
                    panelMessage.setBackground(Color.white);
                    arrayTab.add(tab);
                    if (x == 0) {
                        tab.addTab(text, scroll);

                    } else {
                        int index = tab.getSelectedIndex();
                        tab.setTitleAt(0, text);
                    }
                    setMessage();
                    System.out.println("--------------------------------------------");
                }
            });
            JPanel p = new JPanel();
            p.setBackground(Color.red);
            p.setMaximumSize(new Dimension(200, 30));
            p.add(button);
            p.add(notify);
            friend.add(p);
            System.out.println((String) ar.get(i).toString());
        }
    }

    /**
     * setta i messagi nel panel in corrispondenza dell utente
     */
    public void setMessage() {
        String destinatario = tab.getTitleAt(0);
        panelMessage.removeAll();
        //add your elements
        panelMessage.revalidate();
        panelMessage.repaint();
        for (int i = 0; i < listaMessaggi.size(); i++) {
            System.out.println(listaMessaggi.get(i).getMessage());
            String userLocal = user.getText();
            if (listaMessaggi.get(i).getUser().equals(userLocal)) { //utente che esegue l'app   
                if (listaMessaggi.get(i).getDestinatario().equals(destinatario)) {  // il messaggio è rivolot all'utente che esgue il prg
                    

                         try{
                    if (listaMessaggi.get(i).isForeign() == true) {
                        JPanel boxMessage = new JPanel();
                        boxMessage.setBackground(Color.blue);
                        //aggiugnere i bordi rotondi
                        boxMessage.setMaximumSize(new Dimension(400, 30));
                        boxMessage.setAlignmentX(Component.LEFT_ALIGNMENT);//0.0
                        JLabel message = new JLabel(listaMessaggi.get(i).getMessage());
                        boxMessage.add(message);
                        // panelMessage.setLayout(new BoxLayout(panelMessage, BoxLayout.Y_AXIS));
                        panelMessage.add(boxMessage);
                    }
                   
                    
                }
                 catch(Exception e ){
                            System.out.println("error");
                            }

//JPanel boxMessage = new JPanel(new FlowLayout(FlowLayout.RIGHT));
                    if (listaMessaggi.get(i).isForeign() == false) {
                    JPanel boxMessage = new JPanel();
                    boxMessage.setBackground(Color.red);
                    //aggiugnere i bordi rotondi
                    boxMessage.setMaximumSize(new Dimension(400, 30));
                    boxMessage.setAlignmentX(Component.RIGHT_ALIGNMENT);//0.0
                    JLabel message = new JLabel(listaMessaggi.get(i).getMessage());

                    boxMessage.add(message);
                    // panelMessage.setLayout(new BoxLayout(panelMessage, BoxLayout.Y_AXIS));
                    panelMessage.add(boxMessage);
                    panelMessage.revalidate();
                    panelMessage.repaint();
                }
                }
            }
        }
    }
    
    

    public void inizialize() {
        panelMessage.setLayout(new BoxLayout(panelMessage, BoxLayout.Y_AXIS));
        panelMessage.setMaximumSize(new Dimension(600, 600));
        scroll.setViewportView(panelMessage);                                  //add
        //add
        scroll.setPreferredSize(new Dimension(50, 50));
        scroll.getVerticalScrollBar().setUI(new MyScrollBarUI());         //add

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel friend;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel menu;
    private javax.swing.JTextPane messageText;
    private javax.swing.JLabel notifyImage;
    private javax.swing.JButton provaMessaggio;
    private javax.swing.JButton sendButton;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JPanel title;
    public javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
       private ArrayList ar = new ArrayList();
    public ArrayList arrayTab = new ArrayList();
    private String username;
    private String password;
    Connection connection;
    private JPanel panelMessage = new JPanel(new BorderLayout());
    int v = ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS;
    int h = ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED;
    JScrollPane scroll = new JScrollPane(panelMessage, v, h);
    private List<Message> listaMessaggi = new ArrayList();
    LinkedHashMap notifiche = new LinkedHashMap();
    private List<JLabel> counterNotifiche = new ArrayList();
}
